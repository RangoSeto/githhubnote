mkdir lesson10 
cd lesson10 

git init


touch file0.txt
ls 
echo "my first project" > file0.txt 
git add * (or) git add -A (or) git add .
git commit -m "A file0" 
git status 
ls 

touch file1.txt
touch file2.txt 

ls 

vim file1.txt 
edit : write down 
1.this is first line 
2.this is second line 
esc > :wq 

cat file1.txt

git status 
git status -s 

git add .
git commit -m "file 1 2" 
git status 

touch file3.txt
vim file3.txt
Edit :write down 
1.this is the first expression 
2.this is the second expression 

esc > :wq

vim file2.txt 
Edit : write down 
1.this is the first comment 
2.this is the second comment 

esc > :wq 

cat file2.txt
cat file3.txt 

git status 
git status -s

git add .
git commit -m "file 2 M file 3 A"
git status

ls 

touch file5.txt 

vim file0.txt
Edit : write down 
1.my first experience 

esc > :wq 

cat file0.txt 
ls 

git log 

git log 
git log --oneline 

Note:: rm by OS
rm file3.txt
ls 

Note: 
git rm file1.txt 
ls 

*error = by Git
git checkout file1.txt 

*can undo = by OS (OS ကနေ ဖျက်ရင် undo ပြန်လုပ်လို့ရတယ်)
git checkout file3.txt 
ls 

git add .
git status 
git status -s 

git commit -m "M file0 D file1 A file5" 
git status 
ls 

-----------------------------------

ls
cat file0.txt 
cat file2.txt 
cat file3.txt 
cat file5.txt

git log --oneline 

vim file2.txt 
Edit : write down 
3.this is the third comment 
4.this is the fourth comment 
5.this is the fifth comment 

esc > :wq 

cat file2.txt
git status 

Note::to discard changes of file2.txt
git restore file2.txt 
git status 

cat file2.txt

vim file2.txt 
Edit : write down 
3.this is the third comment 
4.this is the fourth comment 
5.this is the fifth comment 

esc > :wq 

cat file2.txt
git diff 

git add .
git commit -m "M file2"
git status 

ls 

cat file0.txt 
vim file0.txt 
Edit : write down 
my second project 
my second experience 

esc > :wq

cat file0.txt 

cat file2.txt 

vim file2.txt 
Edit : write down 
6.this is the sixth comment 
7.this is the seventh comment 
8.this is the eighth comment 

cat file2.txt 


git status
git status -s 

git add .
git status 

Note:: file0.txt ကို staging area ထဲက ပြန်ထုတ်တာ , state ကို ပြောင်းတာ အထဲက code က ပြောင်းလဲမှုမရှိဘူး
git restore --staged file0.txt 
git status 
cat file0.txt 
git restore --staged file2.txt 
git status 
cat file2.txt 

git add * 
git status 

Note:: Staging area ထဲက file တွေ အကုန်လုံးကို working directory ထဲကို ပြန်ပြောင်းတဲ့ သဘော တစ် file ချင်းမဟုတ်ဘဲ 

git restore --staged * 
git status


git add .
git status 

git commit -m "M file0 M file2"
git status


cat file0.txt
cat file2.txt 

git log 
git log -3 
git log --oneline 

git log --all --oneline (or) git log --oneline --all


19ON

Note:: bdb4245 ဆိုတဲ့ commit က file2.txt ရဲ့ commit မလုပ်ခင် အခြေအနေကို ပြန်ယူတာ -- က မထည့်လည်း ရတယ်။ အဲဒီ commit က အကုန်လုံးကို ခေါ် ချင်ရင် * နဲ့ ခေါ်ရမယ်။ ဒါပေမယ့် လက်ရှိအချိန်မှာ file အသစ်တွေ ရှိနေပြီး အဲဒီ file တွေက  အဲဒီ commit အခြေအနေတုန်းက မရှိဘူးဆိုရင် error ဖြစ်ပြီး မရဘူး။ နောက်ပိုင်း အမြင့် ပိုင်း file ကွားခြားချက်မရှိဘူးဆိုရင်တော့ * နဲ့ ခေါ် လို့ရမယ်။

ls 
git checkout bdb4245 -- file2.txt 

ls 
cat file2.txt 
cat file0.txt 

git log --oneline  

ls
cat file0.txt 
git checkout 46440fe -- file0.txt
ls 
cat file2.txt 
cat file0.txt 

ls
cat file2.txt
cat file0.txt
git checkout 46440fe file2.txt 
ls
cat file2.txt
cat file0.txt

ls 
cat file2.txt
cat file0.txt

error
git checkout 8dd64a3 * 

can
git checkout 732d9b2 *
cat file2.txt
cat file0.txt

git checkout 46440fe file1.txt 
ls 
cat file1.txt

-----------------------------------